{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Calls\\\\IBM Challenge\\\\PneumApp\\\\app\\\\screens\\\\GettingStartedScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AppIntroSlider from 'react-native-app-intro-slider';\nimport Navigation from \"../navigation/Navigation\";\nimport { data } from \"../constants/data\";\nimport { styles } from \"../styles/styles\";\n\nvar GettingStartedScreen = function (_Component) {\n  _inherits(GettingStartedScreen, _Component);\n\n  var _super = _createSuper(GettingStartedScreen);\n\n  function GettingStartedScreen(props) {\n    var _this;\n\n    _classCallCheck(this, GettingStartedScreen);\n\n    _this = _super.call(this, props);\n\n    _this._onPressDone = function () {\n      Navigation.navigate('Dashboard', {\n        someParam: 1\n      });\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.slide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, item.text), React.createElement(View, {\n        style: {\n          backgroundColor: \"#31372F\",\n          opacity: 0.7\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, item.options.map(function (option) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignContent: 'stretch',\n            margin: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: ([styles.text], {\n            width: 80,\n            color: 'white'\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }\n        }, option.type), React.createElement(Picker, {\n          style: {\n            height: 30,\n            width: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, option.selectors.map(function (selector) {\n          return React.createElement(Picker.Item, {\n            style: {\n              fontSize: 10\n            },\n            label: selector,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }\n          });\n        })));\n      }), item.inputs.map(function (input) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignContent: 'stretch',\n            margin: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, React.createElement(TextInput, {\n          style: {\n            height: 25,\n            padding: 10,\n            fontSize: 15,\n            color: 'white',\n            borderWidth: 3,\n            borderColor: '#fff',\n            width: 300\n          },\n          placeholder: input,\n          placeholderTextColor: \"white\",\n          selectionColor: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }\n        }));\n      })));\n    };\n\n    _this._keyExtractor = function (item) {\n      return item.title;\n    };\n\n    return _this;\n  }\n\n  _createClass(GettingStartedScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        source: require(\"../../assets/bg4.jpg\"),\n        style: styles.imagebg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.WelcomeText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, \"Datos adicionales \")), React.createElement(View, {\n        style: styles.descriptionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.descripcionTexto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }, \"Ingrese los siguientes campos para completar su registro\")), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: 'Cedula',\n        placeholderTextColor: 'rgba(0,0,0,0.7)',\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, React.createElement(Picker, {\n        style: styles.input,\n        placeholderTextColor: 'rgba(255,255,255,0.9)',\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Nacionalidad\",\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Colombiano\",\n        value: \"Colombiano\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Mexicano\",\n        value: \"Mexicano\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Argentino\",\n        value: \"Argentino\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: 'Direcci√≥n',\n        placeholderTextColor: 'rgba(0,0,0,0.7)',\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.inputContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.input,\n        placeholder: 'Peso',\n        placeholderTextColor: 'rgba(0,0,0,0.7)',\n        underlineColorAndroid: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.btnLogin,\n        onPress: this._onPressDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, \" Guardar \")));\n    }\n  }]);\n\n  return GettingStartedScreen;\n}(Component);\n\nGettingStartedScreen.navigationOptions = {\n  title: 'Getting Started'\n};\nexport { GettingStartedScreen as default };","map":{"version":3,"sources":["D:/Calls/IBM Challenge/PneumApp/app/screens/GettingStartedScreen.js"],"names":["React","Component","AppIntroSlider","Navigation","data","styles","GettingStartedScreen","props","_onPressDone","navigate","someParam","_renderItem","item","slide","title","text","backgroundColor","opacity","options","map","option","flex","flexDirection","alignContent","margin","width","color","type","height","selectors","selector","fontSize","inputs","input","padding","borderWidth","borderColor","_keyExtractor","require","imagebg","WelcomeText","descriptionContainer","descripcionTexto","inputContainer","btnLogin","navigationOptions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TouchableOpacity, Image, TextInput, Picker, ImageBackground } from 'react-native';\r\nimport AppIntroSlider from 'react-native-app-intro-slider';\r\nimport Navigation from '../navigation/Navigation';\r\nimport { data } from '../constants/data'\r\nimport { styles } from '../styles/styles'\r\n\r\nexport default class GettingStartedScreen extends Component {\r\n    static navigationOptions = {\r\n        title: 'Getting Started'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //const someExtractedParam = this.props.navigation.getParam('someParam', 'defaulValue')\r\n    }\r\n\r\n    _onPressDone = () => {\r\n        Navigation.navigate('Dashboard', { someParam: 1 })\r\n    }\r\n    \r\n\r\n    _renderItem = ({ item }) => {\r\n        return (\r\n            <View style={styles.slide}>\r\n                <Text style={styles.title}>{item.title}</Text>\r\n                <Text style={styles.text}>{item.text}</Text>\r\n\r\n                <View style={{ backgroundColor: \"#31372F\", opacity: 0.7 }}>\r\n                    {item.options.map(option =>\r\n                        <View style={{ flex: 1, flexDirection: 'row', alignContent: 'stretch', margin: 20 }}>\r\n                            <Text style={[styles.text], { width: 80, color: 'white' }}>{option.type}</Text>\r\n                            <Picker\r\n                                style={{ height: 30, width: 200 }}\r\n                            >\r\n                                {option.selectors.map(selector =>\r\n                                    <Picker.Item style={{ fontSize: 10 }} label={selector} />)}\r\n                            </Picker>\r\n                        </View>\r\n                    )}\r\n                    {item.inputs.map(input =>\r\n                        <View style={{ flex: 1, flexDirection: 'row', alignContent: 'stretch', margin: 10 }}>\r\n                            <TextInput\r\n                                style={{ height: 25, padding: 10, fontSize: 15, color: 'white', borderWidth: 3, borderColor: '#fff', width: 300 }}\r\n                                placeholder={input}\r\n                                placeholderTextColor=\"white\"\r\n                                selectionColor=\"white\"\r\n                            />\r\n                        </View>\r\n                    )}\r\n                </View>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    _keyExtractor = (item) => item.title;\r\n\r\n    render() {\r\n        return (\r\n            <ImageBackground source={require('../../assets/bg4.jpg')} style={styles.imagebg}>\r\n                <View style={styles.title} >\r\n                    <Text style={styles.WelcomeText} >Datos adicionales </Text>\r\n                </View>\r\n                <View style={styles.descriptionContainer} >\r\n                    <Text style={styles.descripcionTexto} >Ingrese los siguientes campos para completar su registro</Text>\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder={'Cedula'}\r\n                        placeholderTextColor={'rgba(0,0,0,0.7)'}\r\n                        underlineColorAndroid='transparent'\r\n                    />\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <Picker\r\n                        style={styles.input}\r\n                        placeholderTextColor={'rgba(255,255,255,0.9)'}\r\n                        underlineColorAndroid='transparent'>\r\n                        <Picker.Item label=\"Nacionalidad\" value=\"\" />\r\n                        <Picker.Item label=\"Colombiano\" value=\"Colombiano\"/>\r\n                        <Picker.Item label=\"Mexicano\" value=\"Mexicano\"/>\r\n                        <Picker.Item label=\"Argentino\" value=\"Argentino\"/>\r\n                    </Picker>\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder={'Direcci√≥n'}\r\n                        placeholderTextColor={'rgba(0,0,0,0.7)'}\r\n                        underlineColorAndroid='transparent'/>\r\n                </View>\r\n                <View style={styles.inputContainer}>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        placeholder={'Peso'}\r\n                        placeholderTextColor={'rgba(0,0,0,0.7)'}\r\n                        underlineColorAndroid='transparent'/>\r\n                </View>\r\n                <TouchableOpacity style={styles.btnLogin} onPress={this._onPressDone}>\r\n                    <Text style={styles.text}> Guardar </Text>\r\n                </TouchableOpacity>\r\n            </ImageBackground>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}