{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\React\\\\Pneuma\\\\Pneuma\\\\app\\\\screens\\\\GettingStartedScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport AppIntroSlider from 'react-native-app-intro-slider';\nimport Navigation from \"../navigation/Navigation\";\nimport { data } from \"../constants/data\";\nimport { styles } from \"../styles/styles\";\n\nvar GettingStartedScreen = function (_Component) {\n  _inherits(GettingStartedScreen, _Component);\n\n  var _super = _createSuper(GettingStartedScreen);\n\n  function GettingStartedScreen(props) {\n    var _this;\n\n    _classCallCheck(this, GettingStartedScreen);\n\n    _this = _super.call(this, props);\n\n    _this._onPressDone = function () {\n      Navigation.navigate('Dashboard', {\n        someParam: 1\n      });\n    };\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.slide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, item.title), React.createElement(Image, {\n        source: item.image,\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, item.text));\n    };\n\n    _this._keyExtractor = function (item) {\n      return item.title;\n    };\n\n    return _this;\n  }\n\n  _createClass(GettingStartedScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ImageBackground, {\n        source: require(\"../../assets/bg4.jpg\"),\n        style: styles.imagebg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, React.createElement(AppIntroSlider, {\n        keyExtractor: this._keyExtractor,\n        renderItem: this._renderItem,\n        data: data,\n        onDone: this._onPressDone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return GettingStartedScreen;\n}(Component);\n\nGettingStartedScreen.navigationOptions = {\n  title: 'Getting Started'\n};\nexport { GettingStartedScreen as default };","map":{"version":3,"sources":["C:/React/Pneuma/Pneuma/app/screens/GettingStartedScreen.js"],"names":["React","Component","AppIntroSlider","Navigation","data","styles","GettingStartedScreen","props","_onPressDone","navigate","someParam","_renderItem","item","slide","title","image","text","_keyExtractor","require","imagebg","navigationOptions"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AAEA,OAAOC,UAAP;AACA,SAASC,IAAT;AACA,SAASC,MAAT;;IAEqBC,oB;;;;;AAMjB,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAMnBC,YANmB,GAMJ,YAAM;AACjBL,MAAAA,UAAU,CAACM,QAAX,CAAoB,WAApB,EAAiC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAjC;AACH,KARkB;;AAAA,UAUnBC,WAVmB,GAUL,gBAAc;AAAA,UAAXC,IAAW,QAAXA,IAAW;AACxB,aACI,oBAAC,IAAD;AACI,QAAA,KAAK,EAAEP,MAAM,CAACQ,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BF,IAAI,CAACE,KAAjC,CAFJ,EAGI,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,IAAI,CAACG,KAApB;AAA2B,QAAA,KAAK,EAAEV,MAAM,CAACU,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BJ,IAAI,CAACI,IAAhC,CAJJ,CADJ;AASH,KApBkB;;AAAA,UAsBnBC,aAtBmB,GAsBH,UAACL,IAAD;AAAA,aAAUA,IAAI,CAACE,KAAf;AAAA,KAtBG;;AAAA;AAIlB;;;;6BAoBQ;AACL,aACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEI,OAAO,wBAAhC;AAA0D,QAAA,KAAK,EAAEb,MAAM,CAACc,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AACI,QAAA,YAAY,EAAE,KAAKF,aADvB;AAEI,QAAA,UAAU,EAAE,KAAKN,WAFrB;AAGI,QAAA,IAAI,EAAEP,IAHV;AAII,QAAA,MAAM,EAAE,KAAKI,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EAzC6CP,S;;AAA7BK,oB,CAEVc,iB,GAAoB;AACvBN,EAAAA,KAAK,EAAE;AADgB,C;SAFVR,oB","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, View, TouchableOpacity, Image, TextInput, Picker, ImageBackground } from 'react-native';\r\nimport AppIntroSlider from 'react-native-app-intro-slider';\r\n//import AppIntroSlider to use it\r\nimport Navigation from '../navigation/Navigation';\r\nimport { data } from '../constants/data'\r\nimport { styles } from '../styles/styles'\r\n\r\nexport default class GettingStartedScreen extends Component {\r\n    \r\n    static navigationOptions = {\r\n        title: 'Getting Started'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //const someExtractedParam = this.props.navigation.getParam('someParam', 'defaulValue')\r\n    }\r\n\r\n    _onPressDone = () => {\r\n        Navigation.navigate('Dashboard', { someParam: 1 })\r\n    }\r\n\r\n    _renderItem = ({ item }) => {\r\n        return (\r\n            <View\r\n                style={styles.slide}>\r\n                <Text style={styles.title}>{item.title}</Text>\r\n                <Image source={item.image} style={styles.image} />\r\n                <Text style={styles.text}>{item.text}</Text>\r\n        \r\n            </View>\r\n        );\r\n    };\r\n\r\n    _keyExtractor = (item) => item.title;\r\n\r\n    render() {\r\n        return (\r\n            <ImageBackground source={require('../../assets/bg4.jpg')} style={styles.imagebg}>\r\n                <AppIntroSlider\r\n                    keyExtractor={this._keyExtractor}\r\n                    renderItem={this._renderItem}\r\n                    data={data}\r\n                    onDone={this._onPressDone}\r\n                />\r\n            </ImageBackground>\r\n        );\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}