{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Documents\\\\coronareactapp\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport AppIntroSlider from 'react-native-app-intro-slider';\nvar data = [{\n  title: 'Informacion del ventilador',\n  options: [{\n    typeVentilador: 'Tipo de ventilador',\n    selectors: ['Invasivo', 'No invasivo']\n  }, {\n    typeValvula: 'Tipo de valvula',\n    selectors: []\n  }],\n  text: 'Por favor agregue los campos requeridos para realizar un adecuado procesamiento de datos',\n  image: require(\"./assets/oxygen-mask.png\"),\n  bg: '#febe29'\n}, {\n  title: 'Rocket guy',\n  options: [{\n    typeVentilador: 'Tipo de ventilador',\n    selectors: ['Invasivo', 'No invasivo']\n  }],\n  text: \"I'm already out of descriptions\\n\\nLorem ipsum bla bla bla\",\n  image: 'https://images.assetsdelivery.com/compings_v2/bezwershenko/bezwershenko1810/bezwershenko181000003.jpg',\n  bg: '#22bcb5'\n}];\nvar styles = StyleSheet.create({\n  slide: {\n    padding: 18,\n    alignItems: 'center'\n  },\n  image: {\n    width: 120,\n    height: 120,\n    marginVertical: 50\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: 'center',\n    color: 'rgba(255, 255, 255, 0.8)',\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: 30,\n    color: 'white',\n    textAlign: 'center'\n  },\n  container: {\n    paddingTop: 40,\n    alignItems: \"center\"\n  }\n});\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._renderItem = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: [styles.slide],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, item.title), React.createElement(Image, {\n        source: {\n          uri: item.image\n        },\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, item.text), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignContent: 'stretch',\n          margin: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: ([styles.text], {\n          width: 80,\n          color: 'white'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Tipo de ventilador\"), React.createElement(Picker, {\n        style: {\n          height: 30,\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, React.createElement(Picker.Item, {\n        style: {\n          fontSize: 10\n        },\n        label: \"Invasivo\",\n        value: \"java\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        style: {\n          fontSize: 10\n        },\n        label: \"No invasivo\",\n        value: \"js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignContent: 'stretch',\n          margin: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: ([styles.text], {\n          width: 80,\n          color: 'white'\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, \"Tipo de Valvula\"), React.createElement(Picker, {\n        style: {\n          height: 30,\n          width: 200\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Picker.Item, {\n        style: {\n          fontSize: 10\n        },\n        label: \"Invasivo\",\n        value: \"java\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), React.createElement(Picker.Item, {\n        style: {\n          fontSize: 10\n        },\n        label: \"No invasivo\",\n        value: \"js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }))));\n    };\n\n    _this._keyExtractor = function (item) {\n      return item.title;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AppIntroSlider, {\n        style: {\n          backgroundColor: '#22bcb5'\n        },\n        keyExtractor: this._keyExtractor,\n        renderItem: this._renderItem,\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/ASUS/Documents/coronareactapp/App.js"],"names":["React","AppIntroSlider","data","title","options","typeVentilador","selectors","typeValvula","text","image","require","bg","styles","StyleSheet","create","slide","padding","alignItems","width","height","marginVertical","fontSize","justifyContent","color","textAlign","container","paddingTop","App","_renderItem","item","uri","flex","flexDirection","alignContent","margin","_keyExtractor","backgroundColor","Component"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { View, Text, Image, StyleSheet, Picker } from 'react-native';\nimport AppIntroSlider from 'react-native-app-intro-slider';\n\nconst data = [\n  {\n    title: 'Informacion del ventilador',\n    options : [{\n      typeVentilador:'Tipo de ventilador',\n      selectors : ['Invasivo', 'No invasivo']\n    },{\n      typeValvula :'Tipo de valvula',\n      selectors : []\n    }],\n    text: 'Por favor agregue los campos requeridos para realizar un adecuado procesamiento de datos',\n    image: require('./assets/oxygen-mask.png'),\n    bg: '#febe29',\n  },\n  {\n    title: 'Rocket guy',\n    options : [{\n      typeVentilador:'Tipo de ventilador',\n      selectors : ['Invasivo', 'No invasivo']\n    }],\n    text: \"I'm already out of descriptions\\n\\nLorem ipsum bla bla bla\",\n    image: 'https://images.assetsdelivery.com/compings_v2/bezwershenko/bezwershenko1810/bezwershenko181000003.jpg',\n    bg: '#22bcb5',\n  },\n];\n\nconst styles = StyleSheet.create({\n  slide: {\n    padding: 18,\n    alignItems: 'center',\n  },\n  image: {\n    width: 120,\n    height: 120,\n    marginVertical: 50,\n  },\n  text: {\n    fontSize: 16,\n    justifyContent: 'center',\n    color: 'rgba(255, 255, 255, 0.8)',\n    textAlign: 'center',\n  },\n  title: {\n    fontSize: 30,\n    color: 'white',\n    textAlign: 'center',\n  },\n  container: {\n    paddingTop: 40,\n    alignItems: \"center\"\n  }\n});\n\nexport default class App extends React.Component {\n  _renderItem = ({ item }) => {\n    return (\n      <View\n        style={[\n          styles.slide\n        ]}>\n        <Text style={styles.title}>{item.title}</Text>\n        <Image source={{ uri: item.image }} style={styles.image} />\n        <Text style={styles.text}>{item.text}</Text>\n        <View style={{ flex: 1, flexDirection: 'row', alignContent: 'stretch', margin: 30 }}>\n          <Text style={[styles.text], { width: 80, color: 'white' }}>Tipo de ventilador</Text>\n          <Picker\n            style={{ height: 30, width: 200 }}\n          >\n            <Picker.Item style={{ fontSize: 10 }} label=\"Invasivo\" value=\"java\" />\n            <Picker.Item style={{ fontSize: 10 }} label=\"No invasivo\" value=\"js\" />\n          </Picker>\n        </View>\n        <View style={{ flex: 1, flexDirection: 'row', alignContent: 'stretch', margin: 10 }}>\n          <Text style={[styles.text], { width: 80, color: 'white' }}>Tipo de Valvula</Text>\n          <Picker\n            style={{ height: 30, width: 200 }}\n          >\n            <Picker.Item style={{ fontSize: 10 }} label=\"Invasivo\" value=\"java\" />\n            <Picker.Item style={{ fontSize: 10 }} label=\"No invasivo\" value=\"js\" />\n          </Picker>\n        </View>\n\n      </View>\n    );\n  };\n\n  _keyExtractor = (item) => item.title;\n\n  render() {\n    return (\n      <AppIntroSlider\n        style={{ backgroundColor: '#22bcb5' }}\n        keyExtractor={this._keyExtractor}\n        renderItem={this._renderItem}\n        data={data}\n      />\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}