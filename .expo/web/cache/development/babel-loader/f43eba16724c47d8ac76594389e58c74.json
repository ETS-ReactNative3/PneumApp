{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Base64 } from \"../utils\";\n\nfunction getData() {\n  var db, query, username, password, url, myHeaders, raw, requestOptions, response, json;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          db = \"ventilator_db\";\n          query = \"_find\";\n          username = \"c612a48e-6c75-40f8-b275-f9958a5e1317-bluemix\";\n          password = \"346a8f8b4a86fab70993f3ba0a434d1b6d7ead444a387e6bcb651a4750b420f9\";\n          url = \"https://\" + username + \":\" + password + \"@\" + username + \".cloudantnosqldb.appdomain.cloud\";\n          myHeaders = new Headers({\n            'Authorization': 'Basic ' + Base64.btoa(username + \":\" + password),\n            \"Content-Type\": \"application/json\"\n          });\n          raw = JSON.stringify({\n            \"selector\": {},\n            \"fields\": [\"_id\", \"_rev\", \"timestampCreated\", \"value\"],\n            \"sort\": [{\n              \"timestampCreated\": \"desc\"\n            }],\n            limit: 20\n          });\n          requestOptions = {\n            method: 'POST',\n            headers: myHeaders,\n            body: raw,\n            redirect: 'follow'\n          };\n          _context.prev = 8;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(fetch(url + \"/\" + db + \"/\" + query, requestOptions));\n\n        case 11:\n          response = _context.sent;\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 14:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](8);\n          console.error(_context.t0);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[8, 18]], Promise);\n}\n\nexport { getData };","map":{"version":3,"sources":["C:/React/Pneuma/app/services/cloudant.js"],"names":["Base64","getData","db","query","username","password","url","myHeaders","Headers","btoa","raw","JSON","stringify","limit","requestOptions","method","headers","body","redirect","fetch","response","json","console","error"],"mappings":";AAAA,SAASA,MAAT;;AAEA,SAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,UAAAA,EADV,GACe,eADf;AAEUC,UAAAA,KAFV,GAEkB,OAFlB;AAGUC,UAAAA,QAHV,GAGqB,8CAHrB;AAIUC,UAAAA,QAJV,GAIqB,kEAJrB;AAKUC,UAAAA,GALV,gBAK2BF,QAL3B,SAKuCC,QALvC,SAKmDD,QALnD;AAOQG,UAAAA,SAPR,GAOoB,IAAIC,OAAJ,CAAY;AACxB,6BAAiB,WAAWR,MAAM,CAACS,IAAP,CAAeL,QAAf,SAA2BC,QAA3B,CADJ;AAExB,4BAAgB;AAFQ,WAAZ,CAPpB;AAYQK,UAAAA,GAZR,GAYcC,IAAI,CAACC,SAAL,CAAe;AACrB,wBAAY,EADS;AAErB,sBAAU,CACN,KADM,EAEN,MAFM,EAGN,kBAHM,EAIN,OAJM,CAFW;AAQrB,oBAAQ,CACJ;AACI,kCAAoB;AADxB,aADI,CARa;AAarBC,YAAAA,KAAK,EAAE;AAbc,WAAf,CAZd;AA4BQC,UAAAA,cA5BR,GA4ByB;AACjBC,YAAAA,MAAM,EAAE,MADS;AAEjBC,YAAAA,OAAO,EAAET,SAFQ;AAGjBU,YAAAA,IAAI,EAAEP,GAHW;AAIjBQ,YAAAA,QAAQ,EAAE;AAJO,WA5BzB;AAAA;AAAA;AAAA,2CAoC6BC,KAAK,CAAIb,GAAJ,SAAWJ,EAAX,SAAiBC,KAAjB,EAA0BW,cAA1B,CApClC;;AAAA;AAoCYM,UAAAA,QApCZ;AAAA;AAAA,2CAqCyBA,QAAQ,CAACC,IAAT,EArCzB;;AAAA;AAqCYA,UAAAA,IArCZ;AAAA,2CAsCeA,IAtCf;;AAAA;AAAA;AAAA;AAwCQC,UAAAA,OAAO,CAACC,KAAR;;AAxCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA4CA,SACItB,OADJ","sourcesContent":["import { Base64 } from '../utils'\r\n\r\nasync function getData() {\r\n    const db = \"ventilator_db\";\r\n    const query = \"_find\";\r\n    const username = \"c612a48e-6c75-40f8-b275-f9958a5e1317-bluemix\";\r\n    const password = \"346a8f8b4a86fab70993f3ba0a434d1b6d7ead444a387e6bcb651a4750b420f9\";\r\n    const url = `https://${username}:${password}@${username}.cloudantnosqldb.appdomain.cloud`;\r\n\r\n    var myHeaders = new Headers({\r\n        'Authorization': 'Basic ' + Base64.btoa(`${username}:${password}`),\r\n        \"Content-Type\": \"application/json\"\r\n    });\r\n\r\n    var raw = JSON.stringify({\r\n        \"selector\": {},\r\n        \"fields\": [\r\n            \"_id\",\r\n            \"_rev\",\r\n            \"timestampCreated\",\r\n            \"value\"\r\n        ],\r\n        \"sort\": [\r\n            {\r\n                \"timestampCreated\": \"desc\"\r\n            }\r\n        ],\r\n        limit: 20\r\n    });\r\n\r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: raw,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    try {\r\n        let response = await fetch(`${url}/${db}/${query}`, requestOptions)\r\n        let json = await response.json();\r\n        return json;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport {\r\n    getData\r\n}"]},"metadata":{},"sourceType":"module"}